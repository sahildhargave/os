#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>
sem_t wrt;
pthread_mutex_t mutex;
int balance = 500;
int numreader = 0;
void *writer1(void *wno)
{
  sem_wait(&wrt);
  balance = balance + 100;
  printf("user %d credited Rs.100, Current balance is %d\n", (*((int *)wno)), balance);
  sem_post(&wrt);
}
void *writer2(void *wno)
{
  sem_wait(&wrt);
  balance = balance - 50;
  printf("user %d Debited Rs.50, Current balance is %d\n", (*((int *)wno)), balance);
  sem_post(&wrt);
}
void *reader(void *rno)
{
  pthread_mutex_lock(&mutex);
  numreader++;
  if (numreader == 1)
  {
    sem_wait(&wrt);
  }
  pthread_mutex_unlock(&mutex);
  printf("Current Balance is %d\n", balance);
  pthread_mutex_lock(&mutex);
  numreader--;
  if (numreader == 0)
  {
    sem_post(&wrt);
  }
  pthread_mutex_unlock(&mutex);
}
int main()
{
  pthread_t read[10], write[5];
  pthread_mutex_init(&mutex, NULL);
  sem_init(&wrt, 0, 1);
  int a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
  for (int i = 0; i < 10; i++)
  {
    pthread_create(&read[i], NULL, (void *)reader, (void *)&a[i]);
  }
  for (int i = 0; i < 3; i++)
  {
    pthread_create(&write[i], NULL, (void *)writer1, (void *)&a[i]);
  }
  for (int i = 3; i < 5; i++)
  {
    pthread_create(&write[i], NULL, (void *)writer2, (void *)&a[i]);
  }
  for (int i = 0; i < 10; i++)
  {
    pthread_join(read[i], NULL);
  }
  for (int i = 0; i < 5; i++)
  {
    pthread_join(write[i], NULL);
  }
  pthread_mutex_destroy(&mutex);
  sem_destroy(&wrt);
  return 0;
}